{
  "openapi": "3.0.0",
  "info": {
    "title": "Structured API",
    "description": "API documentation for the Harbor platform and related services.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.structuredlabs.com/v1",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "API_KEY"
      }
    },
    "schemas": {
      "Connection": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["csv", "google_sheets", "salesforce", "hubspot"]
          },
          "credentials": {
            "type": "object",
            "properties": {
              "username": {"type": "string"},
              "password": {"type": "string"},
              "api_key": {"type": "string"},
              "other_params": {"type": "object"}
            }
          },
          "settings": {
            "type": "object",
            "properties": {
              "sync_period": {
                "type": "string",
                "enum": ["30 minutes", "hourly", "daily"]
              }
            }
          }
        },
        "required": ["type", "credentials", "settings"]
      },
      "Entity": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "name": {"type": "string"},
          "relationships": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "target_id": {"type": "string"},
                "type": {
                  "type": "string",
                  "enum": ["one_to_one", "one_to_many", "many_to_many"]
                }
              }
            }
          }
        },
        "required": ["id", "name", "relationships"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {"type": "string"},
          "message": {"type": "string"}
        }
      }
    }
  },
  "paths": {
    "/connections": {
      "post": {
        "summary": "Connects to a specified live data source.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connection_id": {"type": "string"},
                    "status": {"type": "string", "enum": ["connected", "error"]},
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/connections/{connection_id}/refresh": {
      "post": {
        "summary": "Refreshes an existing data connection to ensure data is up-to-date.",
        "parameters": [
          {
            "name": "connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connection_id": {"type": "string"},
                    "status": {"type": "string", "enum": ["refreshed", "error"]},
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/entities/relationships": {
      "get": {
        "summary": "Retrieves a visualization of entity relationships.",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entity"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
        "/entities/{entity_id}/units/": {
      "get": {
        "summary": "Lists all instances of a specific entity.",
        "parameters": [
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "entity_id": {"type": "string"},
                    "instances": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {"type": "string"},
                          "data": {"type": "object"}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/connections/{connection_id}": {
      "delete": {
        "summary": "Deletes a specified data connection.",
        "parameters": [
          {
            "name": "connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful deletion",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {"type": "string", "enum": ["deleted", "error"]},
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/connections/{connection_id}/configure_sync/": {
      "post": {
        "summary": "Configures which columns to sync for a specific data connection.",
        "parameters": [
          {
            "name": "connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "columns_to_sync": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "column_name": {"type": "string"},
                        "mapped_to": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful configuration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connection_id": {"type": "string"},
                    "status": {"type": "string", "enum": ["configured", "error"]},
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/connections/": {
      "delete": {
        "summary": "Deletes all data connections.",
        "responses": {
          "200": {
            "description": "All connections successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {"type": "string", "enum": ["deleted", "error"]},
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/query_threads/": {
      "post": {
        "summary": "Initiates a new query thread.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {"type": "string"},
                  "input_type": {"type": "string", "enum": ["natural_language", "sql"]}
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Query thread created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "thread_id": {"type": "string"},
                    "status": {"type": "string", "enum": ["created", "error"]},
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notes/": {
      "post": {
        "summary": "Creates a new note",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {"type": "string"},
                  "content": {"type": "string"},
                  "mentions": {
                    "type": "array",
                    "items": {"type": "string"}
                  },
                  "images": {
                    "type": "array",
                    "items": {"type": "string"}
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Note created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "note_id": {"type": "string"},
                    "status": {"type": "string", "enum": ["created"]},
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
        "/alerts/": {
      "post": {
        "summary": "Configures a new alert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {"type": "string", "enum": ["query", "dashboard", "metric"]},
                  "target_id": {"type": "string"},
                  "content": {
                    "type": "object",
                    "properties": {
                      "include_images": {"type": "boolean"},
                      "custom_message": {"type": "string"}
                    }
                  },
                  "threshold": {"type": "string", "enum": ["critical", "medium", "low", "info"]},
                  "severity": {"type": "string", "enum": ["high", "medium", "low"]},
                  "schedule": {
                    "type": "object",
                    "properties": {
                      "timezone": {"type": "string"},
                      "date": {"type": "string", "format": "date"},
                      "time": {"type": "string", "format": "time"},
                      "frequency": {"type": "string", "enum": ["daily", "weekly", "hourly"]}
                    }
                  },
                  "delivery": {
                    "type": "object",
                    "properties": {
                      "method": {"type": "string", "enum": ["slack", "email"]},
                      "recipients": {
                        "type": "array",
                        "items": {"type": "string"}
                      }
                    }
                  },
                  "points_of_contact": {
                    "type": "array",
                    "items": {"type": "string"}
                  },
                  "creator": {"type": "string"},
                  "created_at": {"type": "string", "format": "date-time"}
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Alert created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "alert_id": {"type": "string"},
                    "status": {"type": "string", "enum": ["created"]},
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/dashboards/{dashboard_id}/refresh": {
      "post": {
        "summary": "Manually refreshes the data in a dashboard",
        "parameters": [
          {
            "name": "dashboard_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard data refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {"type": "string", "enum": ["refreshed"]},
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/metrics/{metric_id}/compute": {
      "post": {
        "summary": "Computes a predefined or custom metric",
        "parameters": [
          {
            "name": "metric_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date_range": {"type": "string"},
                  "segments": {
                    "type": "array",
                    "items": {"type": "string"}
                  },
                  "filters": {"type": "object"}
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Metric computation complete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "metric_id": {"type": "string"},
                    "value": {"type": ["string", "number"]},
                    "chart_url": {"type": "string"},
                    "raw_data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": {"type": "string"}
                      }
                    },
                    "status": {"type": "string", "enum": ["computed", "failed"]},
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  }
}
