openapi: 3.0.1
info:
  title: 'Entities API'
  description: 'API for managing entity data and relationships'
  version: '1.0.0'
servers:
  - url: 'http://api.structuredlabs.com'
security:
  - bearerAuth: []
paths:
  /entities/load:
    post:
      summary: 'Load and Transform Data'
      description: 'Loads raw data from a data warehouse, transforms it into the structured entity format, and returns a summary.'
      operationId: 'loadEntities'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                warehouseCredentials:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: [bigquery, snowflake, redshift]
                    projectId:
                      type: string
                    clientEmail:
                      type: string
                    privateKey:
                      type: string
                  required:
                    - type
                    - projectId
                    - clientEmail
                    - privateKey
      responses:
        '200':
          description: 'Successfully loaded and transformed data.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary:
                    type: array
                    items:
                      type: object
                      properties:
                        entity:
                          type: string
                        total:
                          type: integer
                        fields:
                          type: array
                          items:
                            type: string

  /entities/units:
    get:
      summary: 'Get Entity Units'
      description: 'Lists all units of a specific entity type.'
      operationId: 'listEntityUnits'
      parameters:
        - name: entity_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successfully listed all units of the entity type.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  entity_id:
                    type: string
                  units:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        data:
                          type: object

  /entities/schema:
    get:
      summary: 'Get Entity Schema'
      description: 'Provides the schema for a specific entity type.'
      operationId: 'getEntitySchema'
      parameters:
        - name: entity_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successfully retrieved schema for the entity unit.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  entity_id:
                    type: string
                  schema:
                    type: object
                    properties:
                      fields:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            type:
                              type: string
                            source:
                              type: string

  /entities/type-schema:
    get:
      summary: 'Get Entity Type Schema'
      description: 'Provides the schema for a specific entity type, detailing the structure and data types of its fields.'
      operationId: 'getEntityTypeSchema'
      parameters:
        - name: entity_type_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successfully retrieved schema for the entity type.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  entity_type_id:
                    type: string
                  schema:
                    type: object
                    properties:
                      fields:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            type:
                              type: string
                            source:
                              type: string
                  status:
                    type: string
                    enum: [success, error]
                  message:
                    type: string

  /entities/units/audit_log:
    get:
      summary: 'Entity Unit Audit Log'
      description: 'Retrieves an audit log of all state changes for a specific unit of an entity type, documenting each change along with timestamps and user details.'
      operationId: 'getUnitAuditLog'
      parameters:
        - name: entity_type_id
          in: query
          required: true
          schema:
            type: string
        - name: unit_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successfully retrieved audit log for the entity unit.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  entity_type_id:
                    type: string
                  unit_id:
                    type: string
                  audit_log:
                    type: array
                    items:
                      type: object
                      properties:
                        timestamp:
                          type: string
                        action:
                          type: string
                        user_id:
                          type: string
                        changes:
                          type: object
                          additionalProperties:
                            type: object
                            properties:
                              old_value:
                                type: string
                              new_value:
                                type: string
                  status:
                    type: string
                    enum: [success, error]
                  message:
                    type: string

  /entities/structure:
    get:
      summary: 'Get Structured Data Model'
      description: 'Returns the nodes and edges for the Structured data model.'
      operationId: 'getStructuredDataModel'
      responses:
        '200':
          description: 'Successfully retrieved structured data model.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  nodes:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        label:
                          type: string
                        properties:
                          type: object
                          additionalProperties:
                            type: string
                  edges:
                    type: array
                    items:
                      type: object
                      properties:
                        source:
                          type: string
                        target:
                          type: string
                        type:
                          type: string
                          enum: [one_to_one, one_to_many, many_to_many]

components:
  schemas:
    Error:
      required:
        - error
        - message
      type: object
      properties:
        error:
          type: integer
          format: int32
        message:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
