openapi: 3.0.1
info:
  title: 'Entities API'
  description: 'API for managing entity data and relationships'
  version: '1.0.0'
servers:
  - url: 'http://api.structuredlabs.com'
security:
  - bearerAuth: []
paths:
  /entities/load:
    post:
      summary: 'Load and Transform Data'
      description: 'Loads raw data from a data warehouse, transforms it into the structured entity format, and returns a summary.'
      operationId: 'loadEntities'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                workspaceId:
                  type: string
      responses:
        '200':
          description: 'Successfully loaded and transformed data.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  entityDocuments:
                    type: array
                    items:
                      $ref: '#/components/schemas/EntityDocument'
  /entities/mapper:
    post:
      summary: 'Map Entities'
      description: 'Maps entities to a specific entity type.'
      operationId: 'mapEntities'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                workspaceId:
                  type: string
                entitiesMap:
                  type: object

      responses:
        '200':
          description: 'Successfully mapped entities to entity type.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
    get:
      summary: 'Get Entity Mappings'
      description: 'Lists all entities mapped to a specific entity type.'
      operationId: 'getEntityMappings'
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successfully listed all entities mapped to the entity type.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  entitiesMap:
                    type: object

  /entities/mapper/magic:
    post:
      summary: 'Automatically Map Entities'
      description: 'Automatically maps entities to a specific entity type.'
      operationId: 'autoMapEntities'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                workspaceId:
                  type: string
      responses:
        '200':
          description: 'Successfully automatically mapped entities to entity type.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  entitiesMap:
                    type: object

  /entities/newMapperEntities:
    post:
      summary: 'Save Map and Create New Entities'
      description: 'Saves the entity mapping and creates new entities.'
      operationId: 'mapNewEntities'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                workspaceId:
                  type: string
                entitiesMap:
                  type: object
      responses:
        '200':
          description: 'Successfully mapped new entities to entity type.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  nodes:
                    type: object
                  edges:
                    type: object
                  success:
                    type: boolean
                  errors:
                    type: object
                  units:
                    type: object
                    properties:
                      units:
                        type: array
                        items:
                          type: object

  /entities/notes:
    post:
      summary: 'Add Notes to Entities'
      description: 'Adds notes to entities.'
      operationId: 'addNotes'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                workspaceId:
                  type: string
                unitId:
                  type: string
                notes:
                  type: object
      responses:
        '200':
          description: 'Successfully added notes to entities.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
    get:
      summary: 'Get Notes for Entities'
      description: 'Lists all notes for a specific entity unit.'
      operationId: 'getNotes'
      parameters:
        - name: unitId
          in: query
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          required: true
          schema:
            type: string
        - name: userId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successfully listed all notes for the entity.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  notes:
                    type: object
                  success:
                    type: boolean

  /entities/units:
    get:
      summary: 'Get Entity Units'
      description: 'Lists all units of a specific entity type'
      operationId: 'listEntityUnits'
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successfully listed all units of the entity type.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                  success:
                    type: boolean
    post:
      summary: 'Create Entity Unit'
      description: 'Creates new unit of a specific entity type.'
      operationId: 'createEntityUnit'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                workspaceId:
                  type: string
                nodeType:
                  type: string
                unit:
                  type: object
      responses:
        '200':
          description: 'Successfully created new units of the entity type.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  schema:
                    type: object
                  unit:
                    type: object

  /entities/structure:
    get:
      summary: 'Get Structured Data Model'
      description: 'Returns the nodes and edges for the Structured data model.'
      operationId: 'getStructuredDataModel'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                workspaceId:
                  type: string
      responses:
        '200':
          description: 'Successfully retrieved structured data model.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  nodes:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        label:
                          type: string
                        properties:
                          type: object
                          additionalProperties:
                            type: string
                  edges:
                    type: array
                    items:
                      type: object
                      properties:
                        source:
                          type: string
                        target:
                          type: string
                        type:
                          type: string
                          enum: [one_to_one, one_to_many, many_to_many]

components:
  schemas:
    Error:
      required:
        - error
        - message
      type: object
      properties:
        error:
          type: integer
          format: int32
        message:
          type: string
    MaterializedView:
      type: object
      properties:
        materialized_view_name:
          type: string
        sql:
          type: string
        key_column:
          type: string
        tables:
          type: array
          items:
            type: string
        node_type:
          type: string
    EntityDocument:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        workspaceId:
          type: string
        nodeType:
          type: string
        materializedView:
          $ref: '#/components/schemas/MaterializedView'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
